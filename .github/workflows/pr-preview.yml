name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # formatting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.11"

  #     - name: Install formatting tools
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install black==24.10.0

  #     - name: Check formatting with Black
  #       run: black --check .

  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      A2RCHI_DIR: /home/runner/work/a2rchi-local
      HOME: /home/runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect base image changes
        id: base_changes
        run: |
          set -euo pipefail
          BASE_REF="${{ github.event.pull_request.base.ref }}"
          git fetch --no-tags origin "$BASE_REF"
          FILES="$(git diff --name-only "origin/${BASE_REF}" HEAD || true)"
          PATTERN='^(requirements/(?:cpu|gpu)-requirementsHEADER\.txt|requirements/requirements-base\.txt|src/cli/templates/dockerfiles/base-[^/]+/Dockerfile)'
          if [[ -z "$FILES" ]]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "tag=latest" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if echo "$FILES" | grep -E "$PATTERN" >/dev/null; then
            echo "Base image inputs changed:"
            echo "$FILES" | grep -E "$PATTERN"
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "tag=pr-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install a2rchi CLI
        run: |
          python -m pip install --upgrade pip
          pip install ".[all]" || pip install .

      - name: Build updated base images
        if: steps.base_changes.outputs.changed == 'true'
        run: |
          set -euo pipefail
          TAG="${{ steps.base_changes.outputs.tag }}"
          scripts/dev/build_docker_images.sh "$TAG"
          for image in a2rchi/a2rchi-python-base a2rchi/a2rchi-pytorch-base; do
            docker tag "$image:$TAG" "localhost/$image:$TAG"
            docker tag "$image:$TAG" "localhost/$image:latest"
          done

      - name: Point services at updated base images
        if: steps.base_changes.outputs.changed == 'true'
        run: python scripts/dev/update_service_base_images.py --tag "${{ steps.base_changes.outputs.tag }}" --switch-source localhost

      - name: Verify MkDocs build
        run: mkdocs build --config-file docs/mkdocs.yml --strict

      - name: Clean up MkDocs build artifacts
        run: rm -rf site

      - name: Run smoke deployment
        uses: ./.github/actions/run-smoke
        with:
          deployment-name: manual-${{ github.run_id }}
          config-path: tests/pr_preview_config/pr_preview_config.yaml
          config-destination: configs/ci/ci_config.yaml
          env-file: .env
          services: chatbot
          hostmode: "true"
          wait-url: http://localhost:7861/api/health
          base-url: http://localhost:7861
